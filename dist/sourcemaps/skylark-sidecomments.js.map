{"version":3,"sources":["skylark-sidecomments.js"],"names":["define","check","a","navigator","userAgent","vendor","window","opera","test","substr","langx","$","Template","CommentTemplate","mobileCheck","Section","eventPipe","$el","currentUser","comments","this","clickEventName","id","data","on","proxy","markerClick","addCommentClick","postCommentClick","cancelCommentClick","deleteCommentClick","render","prototype","event","preventDefault","select","showCommentForm","emit","length","find","addClass","focusCommentBox","hideCommentForm","removeClass","empty","setTimeout","get","focus","cancelComment","deselect","postComment","$commentBox","commentBody","val","comment","sectionId","authorAvatarUrl","avatarUrl","authorName","name","authorId","authorUrl","insertComment","push","newCommentHtml","template","append","updateCommentCount","text","commentId","target","closest","confirm","deleteComment","removeComment","filter","remove","isSelected","hasClass","sectionClasses","classes","commentTemplate","appendTo","destroy","off","skylark","SideComments","Emitter","inherit","_construct","el","existingComments","$body","clone","sections","activeSection","bind","showComments","hideComments","sectionSelected","sectionDeselected","commentPosted","commentDeleted","addCommentAttempted","bodyClick","initialize","self","forEach","section","$section","toString","sectionComments","e","commentsAreVisible","$target","setCurrentUser","removeCurrentUser","attach","SlideComments","main"],"mappings":"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","file":"../skylark-sidecomments.js","sourcesContent":["define('templates/section.html',[], function() { return \"<div class=\\\"side-comment <%= sectionClasses %>\\\">\\n  <a href=\\\"#\\\" class=\\\"marker\\\">\\n    <span><%= comments.length %></span>\\n  </a>\\n  \\n  <div class=\\\"comments-wrapper\\\">\\n    <ul class=\\\"comments\\\">\\n      <% _.forEach(comments, function( comment ){ %>\\n        <%= _.template(commentTemplate, { comment: comment, currentUser: currentUser }) %>\\n      <% }) %>\\n    </ul>\\n    \\n    <a href=\\\"#\\\" class=\\\"add-comment\\\">Leave a comment</a>\\n    \\n    <% if (currentUser){ %>\\n      <div class=\\\"comment-form\\\">\\n        <div class=\\\"author-avatar\\\">\\n          <img src=\\\"<%= currentUser.avatarUrl %>\\\">\\n        </div>\\n        <p class=\\\"author-name\\\">\\n          <%= currentUser.name %>\\n        </p>\\n        <input type=\\\"text\\\" class=\\\"comment-box right-of-avatar\\\" placeholder=\\\"Leave a comment...\\\">\\n        <div class=\\\"actions right-of-avatar\\\">\\n          <a href=\\\"#\\\" class=\\\"action-link post\\\">Post</a>\\n          <a href=\\\"#\\\" class=\\\"action-link cancel\\\">Cancel</a>\\n        </div>\\n      </div>\\n    <% } %>\\n  </div>\\n</div>\"; });\ndefine('skylark-sidecomments/templates/comment.html',[], function() { return \"<li data-comment-id=\\\"<%= comment.id %>\\\">\\n  <div class=\\\"author-avatar\\\">\\n    <img src=\\\"<%= comment.authorAvatarUrl %>\\\">\\n  </div>\\n  <% if (comment.authorUrl) { %>\\n    <a class=\\\"author-name right-of-avatar\\\" href=\\\"<%= comment.authorUrl %>\\\">\\n      <%= comment.authorName %>\\n    </a>\\n  <% } else { %>\\n    <p class=\\\"author-name right-of-avatar\\\">\\n      <%= comment.authorName %>\\n    </p>\\n  <% } %>\\n  <p class=\\\"comment right-of-avatar\\\">\\n    <%= comment.comment %>\\n  </p>\\n  <% if (currentUser && comment.authorId === currentUser.id){ %>\\n  <a href=\\\"#\\\" class=\\\"action-link delete\\\">Delete</a>\\n  <% } %>\\n</li>\"; });\ndefine('skylark-sidecomments/helpers/mobile-check',[],function() {\n\n\tfunction mobileCheck() {\n\t\tvar check = false;\n\t\t(function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n\t\treturn check;\n\t}\n\n\treturn mobileCheck;\n});\n\n\n\ndefine('skylark-sidecomments/Section',[\n\t\"skylark-langx/langx\",\n\t\"skylark-jquery\",\n\t\"../templates/section.html\",\n\t\"./templates/comment.html\",\n\t\"./helpers/mobile-check\"\n],function(langx,$,Template,CommentTemplate,mobileCheck){\n\n\t/**\n\t * Creates a new Section object, which is responsible for managing a\n\t * single comment section.\n\t * @param {Object} eventPipe The Emitter object used for passing around events.\n\t * @param {Array} comments   The array of comments for this section. Optional.\n\t */\n\tfunction Section( eventPipe, $el, currentUser, comments ) {\n\t\tthis.eventPipe = eventPipe;\n\t\tthis.$el = $el;\n\t\tthis.comments = comments ? comments.comments : [];\n\t\tthis.currentUser = currentUser || null;\n\t\tthis.clickEventName = mobileCheck() ? 'touchstart' : 'click';\n\t\t\n\t\tthis.id = $el.data('section-id');\n\n\t\tthis.$el.on(this.clickEventName, '.side-comment .marker', langx.proxy(this.markerClick, this));\n\t\tthis.$el.on(this.clickEventName, '.side-comment .add-comment', langx.proxy(this.addCommentClick, this));\n\t\tthis.$el.on(this.clickEventName, '.side-comment .post', langx.proxy(this.postCommentClick, this));\n\t\tthis.$el.on(this.clickEventName, '.side-comment .cancel', langx.proxy(this.cancelCommentClick, this));\n\t\tthis.$el.on(this.clickEventName, '.side-comment .delete', langx.proxy(this.deleteCommentClick, this));\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Click callback event on markers.\n\t * @param  {Object} event The event object.\n\t */\n\tSection.prototype.markerClick = function( event ) {\n\t\tevent.preventDefault();\n\t\tthis.select();\n\t};\n\n\t/**\n\t * Callback for the comment button click event.\n\t * @param {Object} event The event object.\n\t */\n\tSection.prototype.addCommentClick = function( event ) {\n\t  event.preventDefault();\n\t  if (this.currentUser) {\n\t  \tthis.showCommentForm();\n\t  } else {\n\t  \tthis.eventPipe.emit('addCommentAttempted');\n\t  }\n\t};\n\n\t/**\n\t * Show the comment form for this section.\n\t */\n\tSection.prototype.showCommentForm = function() {\n\t  if (this.comments.length > 0) {\n\t    this.$el.find('.add-comment').addClass('hide');\n\t    this.$el.find('.comment-form').addClass('active');\n\t  }\n\n\t  this.focusCommentBox();\n\t};\n\n\t/**\n\t * Hides the comment form for this section.\n\t */\n\tSection.prototype.hideCommentForm = function() {\n\t  if (this.comments.length > 0) {\n\t    this.$el.find('.add-comment').removeClass('hide');\n\t    this.$el.find('.comment-form').removeClass('active');\n\t  }\n\n\t  this.$el.find('.comment-box').empty();\n\t};\n\n\t/**\n\t * Focus on the comment box in the comment form.\n\t */\n\tSection.prototype.focusCommentBox = function() {\n\t\t// NOTE: !!HACK!! Using a timeout here because the autofocus causes a weird\n\t\t// \"jump\" in the form. It renders wider than it should be on screens under 768px\n\t\t// and then jumps to a smaller size.\n\t\tsetTimeout(langx.proxy(function(){\n\t\t\tthis.$el.find('.comment-box').get(0).focus();\n\t\t}, this), 300);\n\t};\n\n\t/**\n\t * Cancel comment callback.\n\t * @param  {Object} event The event object.\n\t */\n\tSection.prototype.cancelCommentClick = function( event ) {\n\t  event.preventDefault();\n\t  this.cancelComment();\n\t};\n\n\t/**\n\t * Cancel adding of a comment.\n\t */\n\tSection.prototype.cancelComment = function() {\n\t  if (this.comments.length > 0) {\n\t    this.hideCommentForm();\n\t  } else {\n\t  \tthis.deselect();\n\t    this.eventPipe.emit('hideComments');\n\t  }\n\t};\n\n\t/**\n\t * Post comment callback.\n\t * @param  {Object} event The event object.\n\t */\n\tSection.prototype.postCommentClick = function( event ) {\n\t  event.preventDefault();\n\t  this.postComment();\n\t};\n\n\t/**\n\t * Post a comment to this section.\n\t */\n\tSection.prototype.postComment = function() {\n\t\tvar $commentBox = this.$el.find('.comment-box');\n\t  var commentBody = $commentBox.val();\n\t  var comment = {\n\t  \tsectionId: this.id,\n\t  \tcomment: commentBody,\n\t  \tauthorAvatarUrl: this.currentUser.avatarUrl,\n\t  \tauthorName: this.currentUser.name,\n\t  \tauthorId: this.currentUser.id,\n\t  \tauthorUrl: this.currentUser.authorUrl || null\n\t  };\n\t  $commentBox.val(''); // Clear the comment.\n\t  this.eventPipe.emit('commentPosted', comment);\n\t};\n\n\t/**\n\t * Insert a comment into this sections comment list.\n\t * @param  {Object} comment A comment object.\n\t */\n\tSection.prototype.insertComment = function( comment ) {\n\t\tthis.comments.push(comment);\n\t\tvar newCommentHtml = langx.template(CommentTemplate)({ \n\t\t\tcomment: comment,\n\t\t\tcurrentUser: this.currentUser\n\t\t});\n\t\tthis.$el.find('.comments').append(newCommentHtml);\n\t\tthis.$el.find('.side-comment').addClass('has-comments');\n\t\tthis.updateCommentCount();\n\t\tthis.hideCommentForm();\n\t};\n\n\t/**\n\t * Increments the comment count for a given section.\n\t */\n\tSection.prototype.updateCommentCount = function() {\n\t\tthis.$el.find('.marker span').text(this.comments.length);\n\t};\n\n\t/**\n\t * Event handler for delete comment clicks.\n\t * @param  {Object} event The event object.\n\t */\n\tSection.prototype.deleteCommentClick = function( event ) {\n\t\tevent.preventDefault();\n\t\tvar commentId = $(event.target).closest('li').data('comment-id');\n\n\t\tif (window.confirm(\"Are you sure you want to delete this comment?\")) {\n\t\t\tthis.deleteComment(commentId);\n\t\t}\n\t};\n\n\t/**\n\t * Finds the comment and emits an event with the comment to be deleted.\n\t */\n\tSection.prototype.deleteComment = function( commentId ) {\n\t\tvar comment = langx.find(this.comments, function(comment) {\n\t\t\treturn comment.id == commentId ;\n\t\t});\n\t\tcomment.sectionId = this.id;\n\t\tthis.eventPipe.emit('commentDeleted', comment);\n\t};\n\n\t/**\n\t * Removes the comment from the list of comments and the comment array.\n\t * @param commentId The ID of the comment to be removed from this section.\n\t */\n\tSection.prototype.removeComment = function( commentId ) {\n\t\tthis.comments = langx.filter(this.comments, function(comment) {\n\t\t\treturn comment.id != commentId ;\n\t\t});\n\n\t\tthis.$el.find('.side-comment .comments li[data-comment-id=\"'+commentId+'\"]').remove();\n\t\tthis.updateCommentCount();\n\t\tif (this.comments.length < 1) {\n\t\t\tthis.$el.find('.side-comment').removeClass('has-comments');\n\t\t}\n\t};\n\n\t/**\n\t * Mark this section as selected. Delsect if this section is already selected.\n\t */\n\tSection.prototype.select = function() {\n\t\tif (this.isSelected()) {\n\t\t\tthis.deselect();\n\t\t\tthis.eventPipe.emit('sectionDeselected', this);\n\t\t} else {\n\t\t\tthis.$el.find('.side-comment').addClass('active');\n\n\t\t\tif (this.comments.length === 0 && this.currentUser) {\n\t\t\t  this.focusCommentBox();\n\t\t\t}\n\n\t\t\tthis.eventPipe.emit('sectionSelected', this);\n\t\t}\n\t};\n\n\t/**\n\t * Deselect this section.\n\t */\n\tSection.prototype.deselect = function() {\n\t\tthis.$el.find('.side-comment').removeClass('active');\n\t\tthis.hideCommentForm();\n\t};\n\n\tSection.prototype.isSelected = function() {\n\t\treturn this.$el.find('.side-comment').hasClass('active');\n\t};\n\n\t/**\n\t * Get the class to be used on the side comment section wrapper.\n\t * @return {String} The class names to use.\n\t */\n\tSection.prototype.sectionClasses = function() {\n\t\tvar classes = '';\n\n\t\tif (this.comments.length > 0) {\n\t\t\tclasses = classes + ' has-comments';\n\t\t}\n\t\tif (!this.currentUser) {\n\t\t\tclasses = classes + ' no-current-user'\n\t\t}\n\n\t\treturn classes;\n\t};\n\n\t/**\n\t * Render this section into the DOM.\n\t */\n\tSection.prototype.render = function() {\n\t\tthis.$el.find('.side-comment').remove();\n\t\t$(langx.template(Template,{\n\t\t  commentTemplate: CommentTemplate,\n\t\t  comments: this.comments,\n\t\t  sectionClasses: this.sectionClasses(),\n\t\t  currentUser: this.currentUser\n\t\t})).appendTo(this.$el);\n\t};\n\n\t/**\n\t * Desttroy this Section object. Generally meaning unbind events.\n\t */\n\tSection.prototype.destroy = function() {\n\t\tthis.$el.off();\n\t}\n\n\treturn Section;\n\n});\n\ndefine('skylark-sidecomments/SideComments',[\n  \"skylark-langx/skylark\",\n  \"skylark-langx/langx\",\n  \"skylark-jquery\",\n  \"./Section\"\n],function(skylark,langx, $, Section){\n\n  /**\n   * Creates a new SideComments instance.\n   * @param {Object} el               The selector for the element for\n   *                                  which side comments need to be initialized\n   * @param {Object} currentUser      An object defining the current user. Used\n   *                                  for posting new comments and deciding\n   *                                  whether existing ones can be deleted\n   *                                  or not.\n   * @param {Array} existingComments An array of existing comments, in\n   *                                 the proper structure.\n   * \n   * TODO: **GIVE EXAMPLE OF STRUCTURE HERE***\n   */\n\n   var SideComments = langx.Emitter.inherit({\n      _construct : function ( el, currentUser, existingComments ) {\n        this.$el = $(el);\n        this.$body = $('body');\n        this.eventPipe = new langx.Emitter();\n\n        this.currentUser = langx.clone(currentUser) || null;\n        this.existingComments = langx.clone(existingComments) || [];\n        this.sections = [];\n        this.activeSection = null;\n        \n        // Event bindings\n        this.eventPipe.on('showComments', langx.bind(this.showComments, this));\n        this.eventPipe.on('hideComments', langx.bind(this.hideComments, this));\n        this.eventPipe.on('sectionSelected', langx.bind(this.sectionSelected, this));\n        this.eventPipe.on('sectionDeselected', langx.bind(this.sectionDeselected, this));\n        this.eventPipe.on('commentPosted', langx.bind(this.commentPosted, this));\n        this.eventPipe.on('commentDeleted', langx.bind(this.commentDeleted, this));\n        this.eventPipe.on('addCommentAttempted', langx.bind(this.addCommentAttempted, this));\n        this.$body.on('click', langx.bind(this.bodyClick, this));\n        this.initialize(this.existingComments);\n      },\n\n      /**\n       * Adds the comments beside each commentable section.\n       */\n      initialize : function( existingComments ) {\n        var self = this;\n        langx.forEach(this.$el.find('.commentable-section'), function( section ){\n          var $section = $(section);\n          var sectionId = $section.data('section-id').toString();\n          var sectionComments = langx.find(self.existingComments, function(comment){\n            return comment.sectionId == sectionId;\n          });\n\n          self.sections.push(new Section(self.eventPipe, $section, self.currentUser, sectionComments));\n        });\n      },\n\n      /**\n       * Shows the side comments.\n       */\n      showComments : function() {\n        this.$el.addClass('side-comments-open');\n      },\n\n      /**\n       * Hide the comments.\n       */\n      hideComments : function() {\n        if (this.activeSection) {\n          this.activeSection.deselect();\n          this.activeSection = null;\n        }\n\n        this.$el.removeClass('side-comments-open');\n      },\n\n      /**\n       * Callback after a section has been selected.\n       * @param  {Object} section The Section object to be selected.\n       */\n      sectionSelected : function( e,section ) {\n        this.showComments();\n\n        if (this.activeSection) {\n          this.activeSection.deselect();\n        }\n        \n        this.activeSection = section;\n      },\n\n      /**\n       * Callback after a section has been deselected.\n       * @param  {Object} section The Section object to be selected.\n       */\n      sectionDeselected : function( e,section ) {\n        this.hideComments();\n        this.activeSection = null;\n      },\n\n      /**\n       * Fired when the commentPosted event is triggered.\n       * @param  {Object} comment  The comment object to be posted.\n       */\n      commentPosted : function( e,comment ) {\n        this.emit('commentPosted', comment);\n      },\n\n      /**\n       * Fired when the commentDeleted event is triggered.\n       * @param  {Object} comment  The commentId of the deleted comment.\n       */\n      commentDeleted : function( e,comment ) {\n        this.emit('commentDeleted', comment);\n      },\n\n      /**\n       * Fire an event to to signal that a comment as attempted to be added without\n       * a currentUser.\n       */\n      addCommentAttempted : function() {\n        this.emit('addCommentAttempted');\n      },\n\n      /**\n       * Inserts the given comment into the right section.\n       * @param  {Object} comment A comment to be inserted.\n       */\n      insertComment : function( comment ) {\n        var section = langx.find(this.sections, function(section){\n          return section.id == comment.sectionId \n        });\n        section.insertComment(comment);\n      },\n\n      /**\n       * Removes the given comment from the right section.\n       * @param sectionId The ID of the section where the comment exists.\n       * @param commentId The ID of the comment to be removed.\n       */\n      removeComment : function( sectionId, commentId ) {\n        var section = langx.find(this.sections, function(section){\n          return section.id == sectionId \n        });\n        section.removeComment(commentId);\n      },\n\n      /**\n       * Delete the comment specified by the given sectionID and commentID.\n       * @param sectionId The section the comment belongs to.\n       * @param commentId The comment's ID\n       */\n      deleteComment : function( sectionId, commentId ) {\n        var section = langx.find(this.sections, function(section){\n          return section.id == sectionId \n        });\n        section.deleteComment(commentId);\n      },\n\n      /**\n       * Checks if comments are visible or not.\n       * @return {Boolean} Whether or not the comments are visible.\n       */\n      commentsAreVisible : function() {\n        return this.$el.hasClass('side-comments-open');\n      },\n\n      /**\n       * Callback for body clicks. We hide the comments if someone clicks outside of the comments section.\n       * @param  {Object} event The event object.\n       */\n      bodyClick : function( event ) {\n        var $target = $(event.target);\n        \n        // We do a check on $('body') existing here because if the $target has\n        // no parent body then it's because it belongs to a deleted comment and \n        // we should NOT hide the SideComments.\n        if ($target.closest('.side-comment').length < 1 && $target.closest('body').length > 0) {\n          if (this.activeSection) {\n            this.activeSection.deselect();\n          }\n          this.hideComments();\n        }\n      },\n\n      /**\n       * Set the currentUser and update the UI as necessary.\n       * @param {Object} currentUser The currentUser to be used.\n       */\n      setCurrentUser : function( currentUser ) {\n        this.hideComments();\n        this.currentUser = currentUser;\n        langx.forEach(this.sections, function( section ) {\n          section.currentUser = this.currentUser;\n          section.render();\n        });\n      },\n\n      /**\n       * Remove the currentUser and update the UI as necessary.\n       */\n      removeCurrentUser : function() {\n        this.hideComments();\n        this.currentUser = null;\n        langx.forEach(this.sections, function( section ) {\n          section.currentUser = null;\n          section.render();\n        });\n      },\n\n      /**\n       * Destroys the instance of SideComments, including unbinding from DOM events.\n       */\n      destroy : function() {\n        this.hideComments();\n        this.$el.off();\n      }\n\n   });\n\n\n\n  return skylark.attach(\"intg.SlideComments\", SideComments);\n\n});\n\ndefine('skylark-sidecomments/main',[\r\n\t\"./SideComments\"\r\n],function(SlideComments){\r\n\treturn SlideComments;\r\n});\ndefine('skylark-sidecomments', ['skylark-sidecomments/main'], function (main) { return main; });\n\n"]}